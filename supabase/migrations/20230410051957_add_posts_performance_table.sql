create table "public"."posts_performance" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default (now() AT TIME ZONE 'utc'::text),
    "campaign_id" uuid not null,
    "influencer_id" uuid not null,
    "post_id" uuid not null,
    "likes_total" numeric,
    "views_total" numeric,
    "comments_total" numeric,
    "orders_total" numeric,
    "sales_total" numeric,
    "sales_revenue" numeric,
    "updated_at" timestamp with time zone default (now() AT TIME ZONE 'utc'::text)
);


alter table "public"."posts_performance" enable row level security;

CREATE UNIQUE INDEX posts_performance_pkey ON public.posts_performance USING btree (id);

alter table "public"."posts_performance" add constraint "posts_performance_pkey" PRIMARY KEY using index "posts_performance_pkey";

alter table "public"."posts_performance" add constraint "posts_performance_campaign_id_fkey" FOREIGN KEY (campaign_id) REFERENCES campaigns(id) not valid;

alter table "public"."posts_performance" validate constraint "posts_performance_campaign_id_fkey";

alter table "public"."posts_performance" add constraint "posts_performance_influencer_id_fkey" FOREIGN KEY (influencer_id) REFERENCES influencers(id) not valid;

alter table "public"."posts_performance" validate constraint "posts_performance_influencer_id_fkey";

alter table "public"."posts_performance" add constraint "posts_performance_post_id_fkey" FOREIGN KEY (post_id) REFERENCES influencer_posts(id) not valid;

alter table "public"."posts_performance" validate constraint "posts_performance_post_id_fkey";



run-name: Run db-deploy workflow by @${{ github.actor }}
name: db-deploy

on:
    push:
        branches:
            - main
            - staging
    workflow_dispatch:

env:
    SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
    SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
    SUPABASE_PROJECT_ID: ${{ vars.SUPABASE_PROJECT_ID }}
    SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
    SUPABASE_SCANNER_BUFFER_SIZE: 5mb
    EMAIL_ENGINE_API_KEY: ${{ secrets.EMAIL_ENGINE_API_KEY }}
    EMAIL_ENGINE_API_URL: https://email.relay.club

jobs:
    pre-deploy-test:
        runs-on: ubuntu-22.04
        environment: preview
        env:
            NEXT_PUBLIC_FEAT_RECOMMENDED: true
            NEXT_PUBLIC_SUPABASE_URL: http://localhost:54321
            SUPABASE_CONNECTION_URL: postgresql://postgres:postgres@localhost:54322/postgres
            NEXT_PUBLIC_STRIPE_PRODUCT_ID_VIP: prod_NJ1l6867a0bkhL
            NEXT_PUBLIC_STRIPE_PRODUCT_DISCOVERY: prod_OSxVPMxAcggFWP
            NEXT_PUBLIC_STRIPE_PRODUCT_OUTREACH: prod_OSxdtb3ukjSg08

        strategy:
            matrix:
                node-version: [18.14.0]
        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            - run: npm ci --no-audit --no-fund
            - run: npm run type-check-all
            - run: npm run lint
            - run: npm run test

    staging:
        runs-on: ubuntu-22.04
        environment: staging
        if: github.ref_name == 'staging'
        steps:
            - uses: actions/checkout@v3

            - uses: supabase/setup-cli@v1
              with:
                  version: latest

            - name: Verify supabase cli version
              run: supabase -v

            - name: Create supabase config file
              run: cp supabase/config.toml.example supabase/config.toml

            - name: Prep db script
              run: chmod +x ./supabase/db.sh

            - name: Link project
              run: |
                  supabase link --project-ref=$SUPABASE_PROJECT_ID --debug

            - name: Check linked project
              run: ./supabase/db.sh get_proj

            - name: Deploy migrations and seed
              run: supabase db push --include-all --include-seed

    deploy:

        runs-on: ubuntu-22.04
        environment: production
        if: github.ref_name == 'main'
        steps:
            - uses: actions/checkout@v3

            - uses: supabase/setup-cli@v1
              with:
                  version: latest

            - name: Verify supabase cli version
              run: supabase -v

            - name: Create supabase config file
              run: cp supabase/config.toml.example supabase/config.toml

            - name: Prep db script
              run: chmod +x ./supabase/db.sh

            - name: Link project
              run: |
                  supabase link --project-ref=$SUPABASE_PROJECT_ID --debug

            - name: Check linked project
              run: ./supabase/db.sh get_proj

            - name: Deploy migrations and seed
              run: supabase db push --include-all

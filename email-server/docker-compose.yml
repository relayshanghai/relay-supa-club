services:
    emailengine:
        restart: always
        image: postalsys/emailengine:latest
        ports:
            # API and web interface
            # outward/inward ports
            - '4000:3000'
            # SMTP for message submission
            - '2525:2525'
        depends_on:
            - redis
            - elasticsearch
            # - kibana
        # For local development,
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            # Configuration to EmailEngine can be passed via environment variables
            # For full list see https://github.com/postalsys/emailengine#config-mapping
            # Settings to write to v1/settings on startup (https://api.emailengine.app/#operation/postV1Settings)
            # The following value is a YAML block scalar string, so make it sure it is properly indented
            EENGINE_SETTINGS: >
                {
                    "smtpServerEnabled": true,
                    "smtpServerPort": 2525,
                    "smtpServerHost": "0.0.0.0",
                    "smtpServerAuthEnabled": true,
                    "smtpServerPassword": "${SMTP_SERVER_PASSWORD}",
                    "serviceUrl": "${SERVICE_URL}",
                    "webhooksEnabled": true,
                    "webhooks": "${WEBHOOK_URL}",
                    "documentStoreEnabled": true,
                    "documentStoreUrl": "${DOCUMENT_STORE_URL}",
                    "documentStoreAuthEnabled": true,
                    "documentStoreUsername": "${DOCUMENT_STORE_USERNAME}",
                    "documentStorePassword": "${ELASTIC_PASSWORD}"
                }

            # Encryption secret
            EENGINE_SECRET: '${EENGINE_SECRET}'
            # Database connection URL
            EENGINE_REDIS: 'redis://redis:6379/2'

    redis:
        image: redis:alpine
        restart: always
        volumes:
            - /data

    redis-commander:
        image: ghcr.io/joeferner/redis-commander:latest
        build: .
        restart: always
        environment:
            - REDIS_HOSTS=local:redis:6379
        ports:
            - 8081:8081

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
        container_name: elasticsearch
        environment:
            - 'discovery.type=single-node'
            - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
            - 'ELASTIC_PASSWORD=${ELASTIC_PASSWORD}'
            - 'xpack.security.enabled=${XPACK_SECURITY_ENABLED}'
        ports:
            - ${ES_PORT}:${ES_PORT}
        volumes:
            - esdata:/usr/share/elasticsearch/data

    init-kibana:
        image: appropriate/curl
        restart: on-failure
        depends_on:
            - elasticsearch
        entrypoint: [sh, -c]
        command:
            - |
                until curl -u elastic:${ELASTIC_PASSWORD} http://elasticsearch:9200  > /dev/null; do sleep 1; done &&
                curl -u elastic:${ELASTIC_PASSWORD} -v -X  POST -H "Content-Type:application/json" "http://elasticsearch:9200/_security/user/kibana_system/_password" -d '{"password":"${KIBANA_PASSWORD}"}'
        networks:
            default:

    kibana:
        image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
            - ELASTICSEARCH_USERNAME=kibana_system
            - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
        volumes:
            - kibanadata:/usr/share/kibana/data
        ports:
            - 5601:5601
        depends_on:
            - elasticsearch
            - init-kibana
        networks:
            default:

volumes:
    esdata:
    kibanadata:
